library(tidyverse)

# Load necessary libraries
library(dplyr)
library(ggplot2)

custom_theme <- theme_minimal(base_size = 12) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 14),
    axis.title = element_text(face = "bold", size = 12),
    axis.text = element_text(size = 11), 
    panel.grid.major = element_line(color = "gray85"),
    panel.grid.minor = element_blank(),
    panel.border = element_rect(color = "black", fill = NA, linewidth = 0.8)
  )

incidents <- read.csv("C:/Users/james/Downloads/incidents.csv")


# Convert 'open_date' to Date format (assuming day/month/year format)
incidents$open_date <- as.Date(incidents$open_date, format = "%d/%m/%Y")

# Count the number of incidents per day
daily_incidents <- incidents %>%
  group_by(open_date) %>%
  summarise(incident_count = n())

# Extract the year and aggregate the number of spills per year
yearly_incidents <- incidents %>%
  mutate(year = year(open_date)) %>%
  group_by(year) %>%
  summarise(spill_count = n())

# Plot the year-on-year rate of spills
ggplot(yearly_incidents, aes(x = year, y = spill_count)) +
  geom_line(color = "black", size = 1) +
  geom_point(color = "black", size = 2) +
  labs(x = "Year", y = "Number of Spills", title = "Year-on-Year Rate of Oil Spill Incidents") +
  custom_theme


install.packages("gganimate")
install.packages("ggOceanMaps")
library(gganimate)
install.packages("gifski")
install.packages("av")
library(gifski)
library(av)
library(ggOceanMaps)


library(ggplot2)
library(gganimate)
library(ggOceanMaps)
library(gifski)

map_limits <- c(lon = c(-98, -80), lat = c(18, 32))

# Create a clearer ocean basemap
ocean_map <- basemap(limits = map_limits, expand = TRUE, bathymetry = TRUE) +  
  theme_minimal(base_size = 12) +  # Improve readability
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
    plot.subtitle = element_text(hjust = 0.5, size = 12, face = "italic", color = "darkblue"),
    axis.title = element_text(face = "bold", size = 13),
    axis.text = element_text(size = 12), 
    panel.grid.major = element_blank(),  # Remove minor grid lines for cleaner visuals
    panel.grid.minor = element_blank(),
    panel.border = element_rect(color = "gray50", fill = NA, linewidth = 0.5)  # Subtle border
  )

# Convert open_date column properly
incidents$open_date <- as.POSIXct(incidents$open_date, format = "%d/%m/%Y")

# Recode missing values
incidents$threat[is.na(incidents$threat)] <- "Unknown"

# Convert the threat column to a factor with a custom order
incidents$threat <- factor(incidents$threat, levels = c("Oil", "Chemical", "Other", "Unknown"))

# Define color scheme for better contrast
color_palette <- c(
  "Oil" = "#E60000",       # Brighter red for visibility
  "Chemical" = "#E69F00",  # Orange instead of blue for contrast
  "Other" = "#009E73",     # Green (high contrast)
  "Unknown" = "#B0B0B0"    # Light gray (lower opacity)
)

animated_map <- ocean_map +
  geom_point(
    data = incidents, 
    aes(
      x = lon, 
      y = lat, 
      color = factor(threat)
    ),
    size = 4,   # Slightly bigger points
    stroke = 0.8,  # Adds black outline for visibility
    alpha = ifelse(incidents$threat == "Unknown", 0.6, 0.9)  # Make unknowns slightly transparent
  ) +
  scale_color_manual(
    values = color_palette,
    labels = c("Oil", "Chemical", "Other", "Unknown"),
    name = "Type of Spillage"
  ) +
  labs(
    title = "Oil Spills Over Time: {frame_time}",
    subtitle = "ðŸ›¢ Red = Oil | ðŸ§ª Orange = Chemical | ðŸŒ¿ Green = Other",
    x = "Longitude", 
    y = "Latitude"
  ) +
  transition_time(open_date) +  
  shadow_mark(past = TRUE, alpha = 0.5) +  # Lower transparency for past spills
  ease_aes('cubic-in-out')  # Smoother animation

# Save and display the animation with improved quality
animate(animated_map, nframes = 120, fps = 12, width = 1600, height = 1200, end_pause = 15, res = 200, , renderer = gifski_renderer("animated_map.gif"))








library(ggplot2)
library(gganimate)
library(ggOceanMaps)
library(gifski)

map_limits <- c(lon = c(-98, -80), lat = c(18, 32))

# Create a more readable ocean basemap with depth information
ocean_map <- basemap(limits = map_limits, expand = TRUE, bathymetry = TRUE) +  
  theme_minimal(base_size = 12) +  
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
    plot.subtitle = element_text(hjust = 0.5, size = 13, face = "italic", color = "darkblue"),
    axis.title = element_text(face = "bold", size = 13),
    axis.text = element_text(size = 12), 
    panel.grid.major = element_blank(),  
    panel.grid.minor = element_blank(),
    panel.border = element_rect(color = "gray50", fill = NA, linewidth = 0.5)  
  )

# Ensure proper date conversion
incidents$open_date <- as.POSIXct(incidents$open_date, format = "%d/%m/%Y")

# Recode missing values in 'threat'
incidents$threat[is.na(incidents$threat)] <- "Unknown"

# Convert the threat column to a factor with custom order
incidents$threat <- factor(incidents$threat, levels = c("Oil", "Chemical", "Other", "Unknown"))

# Improved color palette for better contrast
color_palette <- c(
  "Oil" = "#E60000",       # Brighter red for oil spills
  "Chemical" = "#FFC107",  # Yellow for better contrast
  "Other" = "#009E73",     # Green for differentiation
  "Unknown" = "#B0B0B0"    # Light gray (lower opacity)
)

animated_map <- ocean_map +
  geom_point(
    data = incidents, 
    aes(
      x = lon, 
      y = lat, 
      color = factor(threat)
    ),
    size = 4.5,   # Increased size for better visibility
    stroke = 0.8,  # Adds black outline for clarity
    alpha = ifelse(incidents$threat == "Unknown", 0.6, 0.9)  
  ) +
  scale_color_manual(
    values = color_palette,
    labels = c("Oil", "Chemical", "Other", "Unknown"),
    name = "Type of Spillage"
  ) +
  labs(
    title = "Oil Spills Over Time: {frame_time}",
    subtitle = "Tracking the Spread of Oil Spills Across the Gulf of Mexico (1970-Present)", 
    x = "Longitude", 
    y = "Latitude"
  ) +
  guides(
    color = guide_legend(
      title.position = "top", 
      title.hjust = 0.5,  # Center the legend title
      override.aes = list(size = 4)  # Make legend dots bigger for readability
    )
  ) +
  theme(
    legend.position = c(0.85, 0.2),  # Move legend inside the map (bottom-right)
    legend.background = element_rect(fill = alpha("white", 0.8), color = NA),  
    legend.key = element_rect(fill = NA)
  ) +
  transition_time(open_date) +  
  shadow_mark(past = TRUE, alpha = 0.5) +  
  ease_aes('cubic-in-out')  

# Save and display the animation with improved quality
animate(animated_map, nframes = 120, fps = 12, width = 1600, height = 1200, end_pause = 15, res = 200, renderer = gifski_renderer("animated_map.gif"))

