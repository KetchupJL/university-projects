{"frames":[{"func":"TBdata %>% dplyr::select(Region, Year, Indigenous, Illiteracy, \n    Urbanisation, Density, Poverty, Poor_Sanitation, Unemployment, \n    Population, Timeliness, lon, lat) %>% mutate(Predicted_TB = predict(gam_model_tw, \n    newdata = ., type = \"response\"), Predicted_TB_Scaled = (Predicted_TB/Population) *  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate(., Predicted_TB = predict(gam_model_tw, newdata = ., type = \"response\"), \n    Predicted_TB_Scaled = (Predicted_TB/Population) * 1e+05)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate.data.frame(., Predicted_TB = predict(gam_model_tw, newdata = ., \n    type = \"response\"), Predicted_TB_Scaled = (Predicted_TB/Population) * \n    1e+05)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate_cols(.data, dplyr_quosures(...), by)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(for (i in seq_along(dots)) {\n    poke_error_context(dots, i, mask = mask)\n    context_poke(\"column\", old_current_column)\n    new_columns <- mutate_col(dots[[i]], data, mask, new_columns) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate_col(dots[[i]], data, mask, new_columns)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mask$eval_all_mutate(quo)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"predict(gam_model_tw, newdata = ., type = \"response\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"predict.gam(gam_model_tw, newdata = ., type = \"response\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(model.frame(ff, data = newdata, na.action = na.act), parent.frame())","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"model.frame(ff, data = newdata, na.action = na.act)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"model.frame.default(ff, data = newdata, na.action = na.act)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(predvars, data, env)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(predvars, data, env)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".handleSimpleError(function (cnd) \n{\n    local_error_context(dots, i = frame[[i_sym]], mask = mask)\n    if (inherits(cnd, \"dplyr:::internal_error\")) { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"h(simpleError(msg, call))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(message, class = error_class, parent = parent, call = error_call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in mutate(., Predicted_TB = predict(gam_model_tw, newdata = ., type = \"response\"),  : \n  \n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m object 'logPop' not found\n"}