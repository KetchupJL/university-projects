"0","# Spatial visualisation of TB risk"
"0",""
"0",""
"0","plot.map <- function(x, Q, main = """", cex = 1, decimals = 2, palette = rev(hcl.colors(length(Q)-1, palette = ""inferno""))) {"
"0","  n.levels <- length(Q) - 1"
"0","  cols <- palette  # directly use provided palette (already a vector of colours)"
"0","  n <- length(x)"
"0","  "
"0","  # Assign colours based on quantiles"
"0","  col <- rep(cols[1], n)"
"0","  for(i in 2:n.levels) {"
"0","    col[x >= Q[i] & x < Q[i + 1]] <- cols[i]"
"0","  }"
"0","  col[x >= Q[n.levels + 1]] <- cols[n.levels]"
"0","  "
"0","  # Format legend with clear control over decimal points"
"0","  legend.names <- c()"
"0","  for(i in 1:n.levels) {"
"0","    legend.names[i] <- paste0(""["", round(Q[i], decimals), "", "", round(Q[i + 1], decimals), ""]"")"
"0","  }"
"0","  "
"0","  # Plotting clearly"
"0","  plot(brasil_micro, col = col, main = main, border = NA)"
"0","  legend('bottomright', legend = legend.names, fill = cols, cex = cex, title = ""TB Rate"")"
"0","}"
"0",""
"0",""
"0","# Generate predicted TB cases from the GAM"
"0","TBdata$predicted_cases <- predict(gam_model_tw, type = ""response"")"
"0",""
"0","# Convert to TB rate per 100,000 population"
"0","TBdata$predicted_rate <- (TBdata$predicted_cases / TBdata$Population) * 100000"
"0",""
"0","# Define quantiles clearly for legend (7 levels)"
"0","quantiles <- quantile(TBdata$predicted_rate, probs = seq(0, 1, length.out = 10))"
"0",""
"0","# Define inverted inferno palette explicitly"
"0","my_palette <- rev(hcl.colors(length(quantiles)-1, palette = ""inferno""))"
"0",""
"0","# Plot with smaller legend size clearly"
"0","plot.map(x = TBdata$predicted_rate,"
"0","         Q = quantiles,"
"0","         main = ""Spatial Structure of Predicted TB Risk (per 100,000 population)"","
"0","         cex = 1, "
"0","         decimals = 2,"
"0","         palette = my_palette)"
"0",""
